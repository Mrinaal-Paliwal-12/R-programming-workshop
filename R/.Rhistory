for(j in 1:ncol(x)){
print(x[i,j])
}
}
x
more6 = which(x[,2]>6)
for(i in more6){
inc = 0
for(j in 1:ncol(x)){
inc = inc + 1
mat6[inc] = c(x[i,j])
}
}
more6 = which(x[,2]>6)
for(i in more6){
inc = 0
for(j in 1:ncol(x)){
inc = inc + 1
mat6[[inc]] = c(x[i,j])
}
}
more6 = which(x[,2]>6)
for(i in more6){
inc = 0
for(j in 1:ncol(x)){
inc = inc + 1
x[i,j]
}
}
more6 = which(x[,2]>6)
for(i in more6){
inc = 0
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
}
}
mat6 = c()
more6 = which(x[,2]>6)
mat6 = c()
for(i in more6){
inc = 0
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
print(inc)
}
}
mat6[1] = x[1,2]
mat6
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc]
}
}
mat6
more6 = which(x[,2]>6)
mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6
mat6<-matrix(mat6,ncol=ncol(x))
mat6
x[x>6]
more6 = which(x[,2]>6)
# mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6<-matrix(mat6,ncol=ncol(x))
more6 = which(x[,2]>6)
# mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6<-matrix(mat6,ncol=ncol(x))
mat6
x
x = sample(1:25,size=12)
y = sample(x)
x3 = c('All numbers divisible by 3 in X are:')
inc = 1
for(i in x){
if(i%%3==0){
inc = inc + 1
x3[[inc]] = i
}
}
for(i in x3)
print(i)
dbl <-function(){
return(2*(x+y))
}
z = dbl()
minX = which(x==min(x))
minY = which(y==min(y))
maxX = which(x==max(x))
maxY = which(y==max(y))
j = 0
x<-matrix(x,nrow=4,ncol=3,byrow=TRUE)
x
x = sample(1:25,size=12)
y = sample(x)
x3 = c('All numbers divisible by 3 in X are:')
inc = 1
for(i in x){
if(i%%3==0){
inc = inc + 1
x3[[inc]] = i
}
}
for(i in x3)
print(i)
dbl <-function(){
return(2*(x+y))
}
z = dbl()
minX = which(x==min(x))
minY = which(y==min(y))
maxX = which(x==max(x))
maxY = which(y==max(y))
j = 0
x<-matrix(x,nrow=4,ncol=3)
x
more6 = which(x[,2]>6)
# mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6<-matrix(mat6,ncol=ncol(x),byrow=TRUE)
x
mat6
more6
cbind(x,c(10,11,12))
x
x
x = sample(1:25,size=12)
y = sample(x)
x3 = c('All numbers divisible by 3 in X are:')
inc = 1
for(i in x){
if(i%%3==0){
inc = inc + 1
x3[[inc]] = i
}
}
for(i in x3)
print(i)
dbl <-function(){
return(2*(x+y))
}
z = dbl()
minX = which(x==min(x))
minY = which(y==min(y))
maxX = which(x==max(x))
maxY = which(y==max(y))
j = 0
x<-matrix(x,nrow=4,ncol=3)
x
more6 = which(x[,2]>6)
mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6<-matrix(mat6,ncol=ncol(x),byrow=TRUE)
x
mat6
# cbind(x,c(10,11,12))
x
rbind(x,c(10,11,12))
x = rbind(x,c(10,11,12))
x
x = rbind(x,colMeans(x))
x
# x = rbind(x,colMeans(x))
# x
apply(x,1,mean)
x = sample(1:25,size=12)
y = sample(x)
x3 = c('All numbers divisible by 3 in X are:')
inc = 1
for(i in x){
if(i%%3==0){
inc = inc + 1
x3[[inc]] = i
}
}
for(i in x3)
print(i)
dbl <-function(){
return(2*(x+y))
}
z = dbl()
minX = which(x==min(x))
minY = which(y==min(y))
maxX = which(x==max(x))
maxY = which(y==max(y))
j = 0
x<-matrix(x,nrow=4,ncol=3)
x
more6 = which(x[,2]>6)
mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6<-matrix(mat6,ncol=ncol(x),byrow=TRUE)
x
mat6
x = rbind(x,c(10,11,12))
x
# x = rbind(x,colMeans(x))
# x
apply(x,1,mean)
apply(x,2,mean)
x = cbind(c(1,1,1,1,1),x)
x
cbind(x[1:5,1])
cbind(x[1:5],1)
x = cbind(c(1:5),x)
x
x = cbind(c(1,1,1,1,1),x)
x
x = sample(1:25,size=12)
y = sample(x)
x3 = c('All numbers divisible by 3 in X are:')
inc = 1
for(i in x){
if(i%%3==0){
inc = inc + 1
x3[[inc]] = i
}
}
for(i in x3)
print(i)
dbl <-function(){
return(2*(x+y))
}
z = dbl()
minX = which(x==min(x))
minY = which(y==min(y))
maxX = which(x==max(x))
maxY = which(y==max(y))
j = 0
x<-matrix(x,nrow=4,ncol=3)
x
more6 = which(x[,2]>6)
mat6 = c()
inc = 0
for(i in more6){
for(j in 1:ncol(x)){
inc = inc + 1
print(x[i,j])
mat6[inc] = x[i,j]
}
}
mat6<-matrix(mat6,ncol=ncol(x),byrow=TRUE)
x
mat6
x = rbind(x,c(10,11,12))
x
# x = rbind(x,colMeans(x))
# x
apply(x,1,mean)
apply(x,2,mean)
x = cbind(c(1,1,1,1,1),x)
x
x = rbind(x,c(7,NA,21,13))
x
x = rbind(x,c(9,NA,16,4))
x
apply(x,2,mean)
apply(x[,2],2,mean)
apply(x[2],2,mean)
apply(x,2,mean)
apply(x,2,mean(na.rm=TRUE))
apply(x,2,mean(x,na.rm=TRUE))
mean(x,na.rm=TRUE)
mean(x[2,],na.rm=TRUE)
mean(x[,2],na.rm=TRUE)
x
pmin(x,y)
pmin(x)
pmin(x,y)
x
y
pmax(x,y)
pmin(x,y,byrow=TRUE)
pmax(x,y,byrow=TRUE)
table <- read.table("Score.txt")
setwd("D:/Locker/KJS/TRIM 3/R-vk/R")
table <- read.table("Score.txt")
table
type(table)
class(table)
plot()
plot(table)
#Q2(c)Explore the linear model to predict (the scores of) Round3 given the Round1,
round3=c(5.0,4.7,5.0,4.3,4.3,5.0)#x
round1=c(3.0,4.3,5.0,3.3,3.3,4.3)#y
#lm(y~x)
lRegModel=lm(round1~round3)
summary(lRegModel)
png("linear regression(c1).jpeg");
#plot(y,x)
plot(round1,round3,col="red",xlab="round3",ylab="round1")
#abline(lm(x~y))
abline(lm(round3~round1))
z=data.frame(round1=5.1)
predict(lRegModel,z)
dev.off()
#Q@(c)predict Round3 given the Round2
round3=c(5.0,4.7,5.0,4.3,4.3,5.0)#x
round2=c(4.3,3.0,5.3,0.0,2.0,4.7)#y
lRegModel=lm(round2~round3)
summary(lRegModel)
png("linear regression(c2).jpeg")
#plot(y,x)
plot(round2,round3,col="red",xlab="round3",ylab="round2")
abline(lm(round3~round2))
z=data.frame(round3=7.1)
predict(lRegModel,z)
dev.off()
#Q2(b)
#Create appropriate visual representing the performance of six participants in three rounds
rounds=matrix(c(3.0,4.3,5.0,3.3,3.3,4.3,4.3,3.0,5.3,0.0,2.0,4.7,5.0,4.7,5.0,4.3,4.3,5.0),nrow=6,ncol=3,byrow=TRUE)
Performance=c("Round1","Round2","Round3")
png("exambarplots.jpeg")
barplot(rounds,names.arg=Performance,xlab="Performance",ylab="round",main="bargraph",col=rainbow(length(rounds)))
legend("topright",legend=Performance,cex = 0.9,fill=rainbow(length(rounds)))
dev.off()
#Q2(c)Explore the linear model to predict (the scores of) Round3 given the Round1,
round3=c(5.0,4.7,5.0,4.3,4.3,5.0)#x
round1=c(3.0,4.3,5.0,3.3,3.3,4.3)#y
#lm(y~x)
lRegModel=lm(round1~round3)
summary(lRegModel)
png("linear regression(c1).jpeg");
plot(y,x)
table
barplot(table,xlab = "Countries" , ylab = "Export in millions",
main = "barPlot - country wise export in millions",
col = rainbow(length(exportStats))
)
barplot(table$Round1,xlab = "Countries" , ylab = "Export in millions",
main = "barPlot - country wise export in millions",
col = rainbow(length(exportStats))
)
barplot(table$Round1,xlab = "Countries" , ylab = "Export in millions",
main = "barPlot - country wise export in millions",
col = rainbow(length(table$Round1))
)
barplot(table$Round1,xlab = "Countries" , ylab = "Export in millions",
main = "barPlot - country wise export in millions",
col = rainbow(length(mean(table$Round1)))
)
table <- read.table("Score.txt")
table
barplot(table$Round1,xlab = "Countries" , ylab = "Export in millions",
main = "barPlot - country wise export in millions",
col = rainbow(length(mean(table$Round1)))
)
barplot(table$Round1,xlab = "Players" , ylab = "Round1 performance",
main = "Round 1 comparison of players",
col = rainbow(length(table$Round1))
)
legend("topright",legend=table$Round1,cex=0.8,fill = rainbow(length(exportStats)))
legend("topright",legend=table$Round1,cex=0.8,fill = rainbow(length(table$Round1)))
plot(table$Round1,table$Round2)
# plot(table$Round1,table$Round2)
head(table)
data <- table
data
x <- as.matrix(data[-2])
x
x <- data[,1]
x
y <- data[,3]
y
reg1 <- lm(y~x)
reg1
summary(reg1)
anova(reg1)
hist(residuals(reg1))
confint(reg1)
x <- data[,2]
y <- data[,3]
reg1 <- lm(y~x)
summary(reg1)
anova(reg1)
hist(residuals(reg1))
confint(reg1)
x <- as.matrix(data[-2])
y <- data[,3]
reg1 <- lm(y~x)
summary(reg1)
anova(reg1)
hist(residuals(reg1))
confint(reg1)
x
x <- as.matrix(data[-3])
y <- data[,3]
reg1 <- lm(y~x)
summary(reg1)
anova(reg1)
hist(residuals(reg1))
confint(reg1)
-l
table <- read.table("Score.txt")
table
barplot(table$Round1,xlab = "Players" , ylab = "Round1 performance",
main = "Round 1 comparison of players",
col = rainbow(length(table$Round1))
)
barplot(table$Round1,xlab = "Players" , ylab = "Round1 performance",
main = "Round 1 comparison of players",
col = rainbow(length(table$Round1))
)
png("AAbarPlot1.jpeg")
barplot(table$Round1,xlab = "Players" , ylab = "Round1 performance",
main = "Round 1 comparison of players",
col = rainbow(length(table$Round1))
)
# legend("topright",legend=table$Round1,cex=0.8,fill = rainbow(length(table$Round1)))
dev.off()
# plot(table$Round1,table$Round2)
head(table)
x <- data[,1]
y <- data[,3]
reg1 <- lm(y~x)
summary(reg1)
anova(reg1)
hist(residuals(reg1))
confint(reg1)
x <- data[,1]
x
y <- data[,3]
y
reg1 <- lm(y~x)
summary(reg1)
anova(reg1)
hist(residuals(reg1))
confint(reg1)
x <- as.matrix(data[-3])
x
y <- data[,3]
y
empdata=data.frame(
empid=c(101,102,103,104,105),
empname=c("vk","sk","shirley","dvd","priya"),
empdept=c(".net","jjava","python","AI","ML"),
empcity=c("mumbai","kalyan","latur","dubai","bhandup"),
empsal=c(20000,2344234,234234,24234,42424),
empdoj=c("2012-02-10","2012-03-15","2019-09-20","2018-01-19","1999-1-23"),
stringsAsFactors = FALSE
)
empdata
?bagplot
library(aplpack)
?bagplot
#PIE CHART
exportStats= c(40,23,60,55,5)
countries=c("india","usa","china","russia","UK")
percent=round((100*exportStats)/sum(exportStats),2)
percent=round((100*exportStats)/sum(exportStats,2))
#3D PIE CHART
library(plotrix)
exportStats= c(40,23,60,55,5)
countries=c("india","usa","china","russia","UK")
percent=round((100*exportStats)/sum(exportStats),2)
?as.factor
#height in cm
height = c(123,141,134,178,156,108,116,119,143,130)    #x
#weight in kg
weight = c(62,85,56,21,47,17,76,92,62,58)      #y
#weight in kg
weight = c(62,85,56,21,47,17,76,92,62,58)      #y
lRegModel = lm(weight~height)
plot(weight,height,col = "red",xlab = "Weight",ylab = "height")
abline(lm(height~weight))
